name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            name: linux
          - os: windows-latest
            name: windows
          - os: macos-latest
            name: macos

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build release (${{ matrix.name }})
        run: cargo build --release

      - if: ${{ matrix.os }} == 'ubuntu-latest'
        run: strip target/release/cargo-temp

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os }} != 'windows-latest'
        with:
          name: build-${{ matrix.name }}
          path: target/release/cargo-temp

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os }} == 'windows-latest'
        with:
          name: build-${{ matrix.name }}
          path: target/release/cargo-temp.exe

      - name: Build release all-features (${{ matrix.name }})
        run: cargo build --release --all-features

      - if: ${{ matrix.os }} == 'ubuntu-latest'
        run: strip target/release/cargo-temp

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os }} != 'windows-latest'
        with:
          name: build-${{ matrix.name }}-all-features
          path: target/release/cargo-temp

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os }} == 'windows-latest'
        with:
          name: build-${{ matrix.name }}-all-features
          path: target/release/cargo-temp.exe

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - uses: actions/download-artifact@v3
        with:
          name: build-linux
          path: build-linux
      - run: mv build-linux/cargo-temp build-linux/cargo-temp-${{ steps.get_version.outputs.VERSION }}-linux-x86_64

      - uses: actions/download-artifact@v3
        with:
          name: build-linux-all-features
          path: build-linux-all-features
      - run: mv build-linux-all-features/cargo-temp build-linux/cargo-temp-all-features-${{ steps.get_version.outputs.VERSION }}-linux-x86_64

      - uses: actions/download-artifact@v3
        with:
          name: build-windows
          path: build-windows
      - run: mv build-windows/cargo-temp.exe build-windows/cargo-temp-${{ steps.get_version.outputs.VERSION }}-windows-x86_64.exe

      - uses: actions/download-artifact@v3
        with:
          name: build-windows-all-features
          path: build-windows-all-features
      - run: mv build-windows-all-features/cargo-temp.exe build-windows/cargo-temp-all-features-${{ steps.get_version.outputs.VERSION }}-windows-x86_64.exe

      - uses: actions/download-artifact@v3
        with:
          name: build-macos
          path: build-macos
      - run: mv build-macos/cargo-temp build-macos/cargo-temp-${{ steps.get_version.outputs.VERSION }}-macos-x86_64

      - uses: actions/download-artifact@v3
        with:
          name: build-macos-all-features
          path: build-macos-all-features
      - run: mv build-macos-all-features/cargo-temp build-macos/cargo-temp-all-features-${{ steps.get_version.outputs.VERSION }}-macos-x86_64

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            build-linux/*
            build-macos/*
            build-windows/*
